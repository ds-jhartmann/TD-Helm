# Default values for simple-spring-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dsjhartmann/simple-spring-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

# -- The [pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) defines privilege and access control settings for a Pod within the deployment
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 3000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: 500m
     memory: 0.5Gi
   requests:
     cpu: 500m
     memory: 0.5Gi

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
  failureThreshold: 10
  initialDelaySeconds: 10
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  failureThreshold: 10
  initialDelaySeconds: 10
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80


# Simple Spring App config
app:
  postgres:
    jdbcurl: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/test"
    username: &postgresuser "testuser"
    existingSecret: &existingSecret test-secret

# PostgreSQL config
postgresql:
  global:
    postgresql:
      auth:
        existingSecret: *existingSecret
        username: *postgresuser
        database: "test"
        secretKeys:
          adminPasswordKey: postgresAdminPassword
          userPasswordKey: postgresPassword
  primary:
    persistence:
      enabled: false
      size: 1Gi